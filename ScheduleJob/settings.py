"""
Django settings for GMTool project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import posixpath

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f73a5f50-b2c7-4303-8ee7-8e8c9b217d9c'
API_KEY = 'AAAA2JnxcDA:APA91bHSg3yn45QRaNmw1xcZ5QVMZjt0l1er00EKq1RQQMnkmQSOn8kjBSPoeoPxJK4t6my9ifYvYhJrN5hnYRYqJePExJbeQzH7Yl9YI3mQmb-VT8kNsv_XrtedT3A9Emq6Qh1LKF7M'
AWS_ACCESS_KEY='AKIA2PVLEY3MABWJJM7Z'
AWS_SECRET_KEY='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'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
	"*"
]

# Application definition

INSTALLED_APPS = [
    'app',
    'djng',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    #'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'app.infra.middleWare.sessionValidator'
]

ROOT_URLCONF = 'GMTool.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
				'app.context_processors.global_info',
            ],
        },
    },
]

WSGI_APPLICATION = 'GMTool.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = posixpath.join(*(BASE_DIR.split(os.path.sep) + ['app/static']))
STATICFILES_DIRS = [
    ('node_modules', os.path.join(BASE_DIR, 'node_modules')),
]

# User Setting

import os
g_appStaticDir = os.getcwd() + '/app/static/'
SESSION_EXPIRY_SEC = 60 * 60 * 10

import sys, json

g_commonconfig = {}
g_runModeList = ['Dev1', 'Dev2', 'Review', 'Dylan2', 'Machance', 'IOS', 'Bongpalman','JoyOne' ,'Milkman', 'Dohyun', 'Tiger', 'Live', 'Staging']
g_args = []

s3_DevBucket = 'aka-dev-resource'
s3_LiveBucket = 'aka-live-resource'

game_gamedbconfig = {}
game_runModeList = ['Dev2','Review','Milkman', 'Live']

with open('/KServer/GMTool/appsettings.json') as data_file:
	appconfig = json.load(data_file)
	g_tableUploadMode = appconfig['TableUploadMode']
	g_runMode = appconfig['RunMode']

for runMode in g_runModeList:
	with open('/KServer/GMTool/Config/{0}/AkaConfig.json'.format(runMode)) as data_file:
		g_commonconfig[runMode] = json.load(data_file)


for game_runMode in game_runModeList:
	with open('/KServer/Config/Server/{0}/GameServerConfig.json'.format(game_runMode)) as dbcon_file:
		game_gamedbconfig[game_runMode] = json.load(dbcon_file)
